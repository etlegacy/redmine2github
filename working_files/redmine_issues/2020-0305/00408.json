{
    "children": null,
    "attachments": null,
    "relations": null,
    "changesets": [
        {
            "revision": "56c2275b3a43cb95677dfe9cdc8de8730893b487",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "server: start filling server with bots above sv_maxclients, fixes #408\n\nBots are now kicked by the server if it is full and a human player wants to connect.",
            "committed_on": "2013-12-11T01:20:44Z"
        },
        {
            "revision": "88b66b0e9a9f0005b453efaf606f52657b6f8de5",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "server: start filling server with bots above sv_maxclients, fixes #408\n\nBots are now kicked by the server if it is full and a human player wants to connect.",
            "committed_on": "2013-12-11T20:42:29Z"
        },
        {
            "revision": "f55f548d43817696489bc98fb5d8b041e88f308b",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "server: disallow bots to use private slots, refs #408",
            "committed_on": "2013-12-12T13:12:31Z"
        },
        {
            "revision": "30aceac1e89e2f47ae7773e62b4b9818939b79b0",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "omnibot: let bots connect to public slots only refs #408",
            "committed_on": "2013-12-12T15:11:30Z"
        }
    ],
    "journals": [
        {
            "id": 2322,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "This is not a master server issue, because master server doesn't track player numbers and only returns ip addresses.\r\n\r\nOur server on port 27960 returns 7 players when there are 8 omnibots, but the other server on port 27961 returns the correct number. 2.60b servers have this issue as well.\r\n\r\nThe problem is in the @clients@ variable sent with the @getinfo@ packet, so XQF probably counts real number of players instead of depending on this variable.\r\n\r\n_EDIT:_ I meant @infoResponse@ packet",
            "created_on": "2013-12-06T12:41:26Z",
            "details": [
                {
                    "property": "attr",
                    "name": "category_id",
                    "old_value": "12",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "assigned_to_id",
                    "new_value": "1"
                }
            ]
        },
        {
            "id": 2323,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "The difference between both servers is the sv_privateClients cvar setting. 27691 hasn't got any private slots. \r\n\r\nThis might cause the issue:\r\n<pre>\r\n\t// don't count privateclients\r\n\tcount = humans = 0;\r\n\tfor (i = sv_privateClients->integer ; i < sv_maxclients->integer ; i++)\r\n</pre>\r\n\r\n\r\n ",
            "created_on": "2013-12-06T18:15:38Z",
            "details": []
        },
        {
            "id": 2361,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "Applied in changeset commit:56c2275b3a43cb95677dfe9cdc8de8730893b487.",
            "created_on": "2013-12-11T01:27:00Z",
            "details": [
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "1",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "0",
                    "new_value": "100"
                }
            ]
        },
        {
            "id": 2362,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "The issue was that Omnibots used private slots by default and server correctly reports only public slots.\r\n\r\nNow omnibots start filling slots above private slots and only if there aren't any left will they use private slots.\r\n\r\nObviously if server will be full with human players and admin adds some bots in the private slots, they will stay there until human players connect and replace them. We could forbid Omnibots to use private slots, but this is an Omnibot issue. Maybe we could suggest to OB team that they should implement a cvar which would make omnibots use only public slots by default.\r\n",
            "created_on": "2013-12-11T01:41:17Z",
            "details": []
        },
        {
            "id": 2373,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "One other change I made is that bots are now kicked by the server if a human player wants to connect to and the server is full. I cannot imagine a situation where the server owner would prefer bots over humans, but it could be a good idea to expose bot functions to lua.",
            "created_on": "2013-12-11T11:15:22Z",
            "details": []
        },
        {
            "id": 2378,
            "user": {
                "id": 9,
                "name": "Mateos"
            },
            "notes": "Have you done this in the OB config files, not coded in ET:L?",
            "created_on": "2013-12-11T19:02:53Z",
            "details": []
        },
        {
            "id": 2379,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "I don't think this can be changed in any Omni-bot config files. Client slot is hardcoded to start from 1 in source:src/game/g_etbot_interface.cpp#L2126",
            "created_on": "2013-12-11T19:11:52Z",
            "details": []
        },
        {
            "id": 2381,
            "user": {
                "id": 9,
                "name": "Mateos"
            },
            "notes": "Huh, well it is possible to make a bot leave when a player joins a team ^^'",
            "created_on": "2013-12-11T20:55:46Z",
            "details": []
        },
        {
            "id": 2382,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "Oh right, I was talking about OB preferentially filling private slots when you set @sv_privateClients@ on the server. Now they preferentially fill public slots. That was half of this fix.\r\n\r\nBots do disconnect when you join a team, but if you were to fill the server completely with bots and @sv_privateClients@ was set to a value greater than 1, then no human players would be able to connect, because the server would say it is full. Now a bot is kicked from the server if a human connects. This was the second half of this fix.",
            "created_on": "2013-12-11T21:02:58Z",
            "details": []
        },
        {
            "id": 2383,
            "user": {
                "id": 9,
                "name": "Mateos"
            },
            "notes": "Alright, nice change :)",
            "created_on": "2013-12-11T21:17:30Z",
            "details": []
        },
        {
            "id": 2394,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "Bots shouldn't use private slots. When these slots are used by bots - humans with private slot priviledge won't connect on private slots and public slots are used instead.\r\nI think we can change g_etbot_interface.cpp#L2126 to something like this:\r\n\r\n<pre>\r\n\t\tint pcn = trap_Cvar_VariableIntegerValue(\"sv_privateClients\");\r\n\r\n\t\t// start at sv_privateClients if set, else with 1\r\n\t\tfor (int clNum = (pcn > 1 ? pcn:1); clNum < level.maxclients; clNum++)\r\n\t\r\n</pre>\r\n\r\nThis loops just tries to find free slots to call trap_BotAllocateClient() later on. By this change we'll ensure private slots are reserved for real players.\r\nFinally trap_BotAllocateClient() prefers non private slots.",
            "created_on": "2013-12-12T05:37:12Z",
            "details": []
        },
        {
            "id": 2396,
            "user": {
                "id": 30,
                "name": "crapshoot"
            },
            "notes": "I don't think you need to update g_etbot_interface at all. The engine should determine which slots are used. The only reason g_etbot_interface was starting at 1 was because we wanted to ensure that slot 0 wasn't used. Keep in mind that this bit of code was written before the engine was open sourced. This call to BotAllocateClient simply gives it a starting index and isn't depending on the bot being allocated in that slot.",
            "created_on": "2013-12-12T06:03:57Z",
            "details": []
        },
        {
            "id": 2398,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "IR4T4 wrote:\r\n> I think we can change g_etbot_interface.cpp#L2126 to something like this: ...\r\nChanging this would only have effect in the Legacy mod and not the server.\r\n\r\n> Bots shouldn't use private slots.\r\nOK. I guess it doesn't make sense for bots to use private slots anyway, so it is fixed now. They won't be allocated a private slot by the server.\r\n\r\ncrapshoot wrote:\r\n> The engine should determine which slots are used.\r\nYea, you are right.\r\n\r\n",
            "created_on": "2013-12-12T13:18:40Z",
            "details": []
        },
        {
            "id": 2399,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": ":D ...  I was just updating this ticket and Radegast was a tiny bit faster\r\n\r\ncrapshoot wrote:\r\n> I don't think you need to update g_etbot_interface at all. ...\r\nOf course ETL/legacy doesn't have to update the interface but this would also fix the issue with vanilla code. The fix should go into the OB rep.\r\n\r\n",
            "created_on": "2013-12-12T13:24:53Z",
            "details": []
        },
        {
            "id": 2400,
            "user": {
                "id": 30,
                "name": "crapshoot"
            },
            "notes": "IR4T4 wrote:\r\n> ... but this would also fix the issue with vanilla code. The fix should go into the OB rep.\r\n\r\nThat's a valid point, thanks.\r\n\r\n",
            "created_on": "2013-12-12T13:34:17Z",
            "details": []
        }
    ],
    "watchers": [
        {
            "id": 9,
            "name": "Mateos"
        },
        {
            "id": 30,
            "name": "crapshoot"
        }
    ],
    "time_entries": null,
    "id": 408,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 1,
        "name": "Bug"
    },
    "status": {
        "id": 5,
        "name": "Fixed"
    },
    "priority": {
        "id": 4,
        "name": "Normal"
    },
    "author": {
        "id": 3,
        "name": "IR4T4"
    },
    "assigned_to": {
        "id": 1,
        "name": "Radegast"
    },
    "category": {
        "id": 5,
        "name": "Server"
    },
    "fixed_version": {
        "id": 11,
        "name": "2.71rc4"
    },
    "subject": "ET: L server doesn't show correct player count in server browser",
    "description": "I did notice our server browser shows currently 7/30 players on our server (7 players, 30 slots) although 8 bots are connected.\r\n\r\nserver browser -> set filter 'legacy'\r\n\r\nOther browser tools (f.e. XQF) show the correct player count so the issue might be caused by the master server.\r\n\r\n\r\n\r\n\r\n ",
    "start_date": "2013-12-06",
    "done_ratio": 100,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS"
        },
        {
            "id": 2,
            "name": "Arch"
        }
    ],
    "created_on": "2013-12-06T10:41:18Z",
    "updated_on": "2013-12-12T13:34:17Z",
    "closed_on": "2013-12-11T01:27:00Z"
}