{
    "children": null,
    "attachments": null,
    "relations": null,
    "changesets": [],
    "journals": [
        {
            "id": 4102,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2014-12-15T16:30:33Z",
            "details": [
                {
                    "property": "attr",
                    "name": "description",
                    "old_value": "We should think of building the update-installer as part of the main code, with a submodule link to the \"Update-Installer\":https://github.com/etlegacy/Update-Installer repo and a new optional BUILD_UPDATEINSTALLER cmake flag.\r\n\r\nI had to install an entire 32 bits chroot to build the updater for Linux 32, which is quite inconvenient to say the least.",
                    "new_value": "We should think of building the update-installer as part of the main code, with a submodule link to the \"Update-Installer\":https://github.com/etlegacy/Update-Installer repo and a new optional BUILD_UPDATEINSTALLER cmake flag.\r\n\r\nI had to install an entire 32 bits chroot to build the updater for Linux 32, which is quite inconvenient to say the least (dirty, but quick).\r\n\r\nAlternatively, improve the Mendeley CMake scripts for 32 bits cross compilation and send the improvement upstream (probably preferable solution)."
                }
            ]
        },
        {
            "id": 4103,
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "notes": "I think we should keep it as a separate thing, it should only be built when we need it updated and its a completely separate project anyway.",
            "created_on": "2014-12-15T18:08:03Z",
            "details": []
        },
        {
            "id": 4104,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "You are right. I actually edited the description after creating the ticket: making the included CMake script work for cross-compilation (and pushing it upstream if possible) would probably be a better idea.",
            "created_on": "2014-12-15T18:19:23Z",
            "details": []
        },
        {
            "id": 4105,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2014-12-15T18:20:24Z",
            "details": [
                {
                    "property": "attr",
                    "name": "subject",
                    "old_value": "Build update-installer as part of ET:Legacy",
                    "new_value": "Update update-installer cmake script for cross-compilation"
                },
                {
                    "property": "cf",
                    "name": "1",
                    "old_value": "",
                    "new_value": "Linux"
                }
            ]
        }
    ],
    "watchers": [],
    "time_entries": null,
    "id": 727,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 3,
        "name": "Task"
    },
    "status": {
        "id": 1,
        "name": "New"
    },
    "priority": {
        "id": 4,
        "name": "Normal"
    },
    "author": {
        "id": 140,
        "name": "Spyhawk"
    },
    "category": {
        "id": 12,
        "name": "General"
    },
    "fixed_version": {
        "id": 4,
        "name": "ALL"
    },
    "subject": "Update update-installer cmake script for cross-compilation",
    "description": "We should think of building the update-installer as part of the main code, with a submodule link to the \"Update-Installer\":https://github.com/etlegacy/Update-Installer repo and a new optional BUILD_UPDATEINSTALLER cmake flag.\r\n\r\nI had to install an entire 32 bits chroot to build the updater for Linux 32, which is quite inconvenient to say the least (dirty, but quick).\r\n\r\nAlternatively, improve the Mendeley CMake scripts for 32 bits cross compilation and send the improvement upstream (probably preferable solution).",
    "start_date": "2014-12-15",
    "done_ratio": 0,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS",
            "value": "Linux"
        },
        {
            "id": 2,
            "name": "Arch",
            "value": ""
        }
    ],
    "created_on": "2014-12-15T16:24:07Z",
    "updated_on": "2014-12-15T18:20:24Z"
}