{
    "children": null,
    "attachments": null,
    "relations": null,
    "changesets": [
        {
            "revision": "c9976f1dbe022369f37c9dba0289c9a26d36f4c1",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "client: size of char extensions_string and related ui var increased refs\n#327",
            "committed_on": "2013-08-09T08:50:25Z"
        },
        {
            "revision": "0926225d8b571466e55c326fb17d741147d8d4d5",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "client: reverted old extensions_string size, unused\nZOMBIEFX_FADEOUT_TIME removed, formattings refs #327",
            "committed_on": "2013-08-09T21:54:33Z"
        },
        {
            "revision": "ed1e3f7438179c674c3de791b644dc8003bd3388",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "client: print all GL extensions in GfxInfo_f refs #327",
            "committed_on": "2013-08-10T14:53:55Z"
        },
        {
            "revision": "0f61edd7e5442df7973af0657a1ae9cf17963837",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "renderer2: print all GL extensions in GfxInfo_f refs #327",
            "committed_on": "2013-08-14T11:41:32Z"
        }
    ],
    "journals": [
        {
            "id": 1804,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "Max limits related to the GL extenstions string size/data have been increased (extensions_string[ 8192 ]). This should do the trick for the next release but isn't a final solution. Extensions string data should be stored in a pointer see http://stackoverflow.com/questions/8500586/what-size-of-an-array-should-i-use-to-print-glgetstringgl-extensions\r\ninstead of char[] to solve our issue finally.\r\n\r\n... but we have to update this code area anyway (at least for renderer2). Our used glGetString(GL_EXTENSIONS) function is deprecated in upper OpenGL versions - see http://www.opengl.org/discussion_boards/showthread.php/165539-GL_EXTENSIONS-replacement and if we switch to SDL 2.0 the whole context code might change.",
            "created_on": "2013-08-09T08:53:33Z",
            "details": [
                {
                    "property": "attr",
                    "name": "category_id",
                    "new_value": "1"
                },
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "new_value": "8"
                }
            ]
        },
        {
            "id": 1806,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "I had to revert to the olf value of 4096 for compatibility reasons. WIP! ",
            "created_on": "2013-08-09T22:02:08Z",
            "details": [
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "1",
                    "new_value": "2"
                },
                {
                    "property": "attr",
                    "name": "assigned_to_id",
                    "new_value": "3"
                },
                {
                    "property": "attr",
                    "name": "priority_id",
                    "old_value": "4",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "8",
                    "new_value": "7"
                }
            ]
        },
        {
            "id": 1812,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "Issue has been fixed with the glew library http://glew.sourceforge.net/ introduced by Jacker for renderer2. I didn't realize before it's also used for renderer1 :D\r\n\r\nCommand '/gfxinfo' will print the complete info now.\r\n\r\nNotes:\r\nInternally glconfig_t member extensions_string[MAX_STRING_CHARS * 4] isn't used for real at engine side anymore but populated and kept for compatibility reasons. \r\nTo fix the string with more than 4096 chars on mod side with keept compatibility we have to add a pointer to the full string at the end of glconfig_t. Currently I see no reason to do so: Mods have to adjust their code in that case and in vanilla/legacy mod the extensions_string data affects UI 'FEEDER_GLINFO' code only which this isn't used by any menu.\r\n",
            "created_on": "2013-08-14T11:32:57Z",
            "details": [
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "2",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "7",
                    "new_value": "8"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "0",
                    "new_value": "100"
                }
            ]
        },
        {
            "id": 1847,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "",
            "created_on": "2013-08-20T17:42:31Z",
            "details": [
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "8",
                    "new_value": "7"
                }
            ]
        }
    ],
    "watchers": [
        {
            "id": 44,
            "name": "Jacker"
        },
        {
            "id": 35,
            "name": "Dragonji"
        }
    ],
    "time_entries": null,
    "id": 327,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 1,
        "name": "Bug"
    },
    "status": {
        "id": 5,
        "name": "Fixed"
    },
    "priority": {
        "id": 5,
        "name": "High"
    },
    "author": {
        "id": 236,
        "name": "chriswww"
    },
    "assigned_to": {
        "id": 3,
        "name": "IR4T4"
    },
    "category": {
        "id": 1,
        "name": "Client"
    },
    "fixed_version": {
        "id": 7,
        "name": "2.71rc2"
    },
    "subject": "Both original ET and ET:Legacy play horribly with new GFX cards if Extensions Limit is not enforced",
    "description": "It took me a year to track down this insiduous problem, which causes horrible gameplay. Need to much increase the buffer to read opengl extensions available from card. Currently set at 4096 bytes/characters. However, as the game detects an impending buffer overrun, it throws them all away, doing all the fancy rendering bits in software. Hence stutter, audio artifacts, warping opponents and keyboard/mouse input sometimes doesn't work as responsively as it should. Please fix, so that the game correctly detects all extensions it wants.",
    "start_date": "2013-08-09",
    "done_ratio": 100,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS"
        },
        {
            "id": 2,
            "name": "Arch"
        }
    ],
    "created_on": "2013-08-09T04:08:23Z",
    "updated_on": "2013-08-20T17:42:31Z",
    "closed_on": "2013-08-14T11:32:57Z"
}