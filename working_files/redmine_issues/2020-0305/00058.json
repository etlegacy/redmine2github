{
    "children": null,
    "attachments": null,
    "relations": [
        {
            "id": 11,
            "issue_id": 58,
            "issue_to_id": 39,
            "relation_type": "precedes",
            "delay": 0
        }
    ],
    "changesets": [
        {
            "revision": "cae53d40f8af1993e308aa6481b5648ab8e69bb2",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: experimental CMake build script, refs #58",
            "committed_on": "2012-06-06T18:15:59Z"
        },
        {
            "revision": "a8e328e017ce8abd68eaa37715787f5594931d77",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: made CMake verbose when libs are missing, refs #58",
            "committed_on": "2012-06-07T21:44:30Z"
        },
        {
            "revision": "491920200b15e36d9c041681b48f2eb2543d3ab7",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: CMake can now build bundled libs on linux (still need to change include dirs, etc.), refs #58",
            "committed_on": "2012-06-09T19:12:01Z"
        },
        {
            "revision": "e4d3f63355c2c84c79859909a5d59cc6598c692d",
            "comments": "misc: CMake can now use BUNDLED_INCLUDE_DIRS, refs #58",
            "committed_on": "2012-06-11T13:17:46Z"
        },
        {
            "revision": "b6c0a4d97f0e94e28b73b1de538c830c450bd0ca",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: fixed mistake in CMake script from the last commit, refs #58",
            "committed_on": "2012-06-11T13:40:08Z"
        },
        {
            "revision": "6e9c460e6a63ecff24961e09db59d7f1fb799b82",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: CMake rescans cached libraries when CROSS_COMPILE32 changes, refs #58",
            "committed_on": "2012-06-13T14:29:55Z"
        },
        {
            "revision": "be6164a2491f51936297cc0beb4df005cf64022b",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: CMake handles installation and rudimentary DEB packaging, refs #58",
            "committed_on": "2012-06-14T20:42:31Z"
        },
        {
            "revision": "e0937a612285e46fd5bafb709264e762b1fdb92f",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: symlinks don't work with CPack packages, refs #58",
            "committed_on": "2012-06-15T12:57:26Z"
        },
        {
            "revision": "467abc1096a82e777e2564e27d43183e6c2dae9e",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: fixed passing arguments to bash scripts, refs #58",
            "committed_on": "2012-06-15T20:50:24Z"
        },
        {
            "revision": "5cf8cf0baafb49430df85e9dd769fab2b9c8cb07",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: separated CPack configuration from CMake, refs #39, refs #58\n* using symlinks again instead of bash scripts on linux\n* BUILD_SERVER = ON by default (to make it easier to use with the OpenSuse build service)",
            "committed_on": "2012-06-17T18:59:22Z"
        },
        {
            "revision": "5e6facf413192500cfe5cfe8bdf858b8665bfd2c",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: Windows build fixes, refs #58",
            "committed_on": "2012-06-19T11:26:02Z"
        },
        {
            "revision": "651bb1bb46968ab6a12b2bec8042c6b36ecd86ad",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: fixed CMake Windows build with cURL, patch by dutchmeat, fixes #58",
            "committed_on": "2012-06-21T16:05:47Z"
        },
        {
            "revision": "bb32d7241b6c614812a3b7c4eac8a58fe2ae376d",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: CMake crosscompiling and Windows fixes, refs #58\n* set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS OFF) is the correct way to look for 32bit libs\n* Windows client looks for *_mp_* dll and not *.mp.*",
            "committed_on": "2012-06-25T13:01:49Z"
        },
        {
            "revision": "91011252313e17425dc6e3d7faf07c287e62ebdf",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: added mingw32 crosscompiling target to CMake, refs #58",
            "committed_on": "2012-07-07T15:14:47Z"
        },
        {
            "revision": "84c8f6d05ba6e852c36eb22c0c54379c0f40ee62",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: added mp_bin.pk3 target to CMake, refs #58",
            "committed_on": "2012-07-11T14:56:51Z"
        },
        {
            "revision": "efcb03c13dd4d69ed78c46c9cc5a7ed291c26674",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: set required libjpeg version to 8, reported by Ilm, refs #58",
            "committed_on": "2012-07-16T10:57:05Z"
        },
        {
            "revision": "e84f17a7acd5041ce8f0c7eef9b2dfea43262590",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: added pak3.pk3 build option to CMake, refs #58, refs #68",
            "committed_on": "2012-08-05T12:02:03Z"
        },
        {
            "revision": "44845da7fe60f3db911ca9907837614216d817aa",
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "comments": "misc: disabled pak3.pk3 creation by default, refs #68, refs #58",
            "committed_on": "2012-08-06T09:46:04Z"
        },
        {
            "revision": "f809a1d6db2f7f1efb80053cf6c6b143ea5a2631",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "general linux: sh scripts for omnibot installs (only) refs #86,\nrefs #58",
            "committed_on": "2012-11-04T06:59:59Z"
        },
        {
            "revision": "014eda395a2486deea46536f6780e64ba0fe6a4d",
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "comments": "general linux: updated icon for installer refs #58",
            "committed_on": "2012-11-04T21:04:34Z"
        }
    ],
    "journals": [
        {
            "id": 132,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "I created an initial CMake build script. Project compiles fine and the dedicated server and mod libraries work, but the client sigsegvs.\n\n<pre>...\nError: file ui/wm_quickmessageAlt.menu, line 216: unknown precompiler directive 1\nError: file ui/wm_quickmessageAlt.menu, line 216: unknown precompiler directive 1\n(SIGSEGV)\n</pre>\n\nHere is a complete log: http://pastebin.com/J2yi0BHW\n\nHere is CMake with syntax highlighting: http://pastebin.com/ZyJWbbRs",
            "created_on": "2012-06-01T22:50:34Z",
            "details": [
                {
                    "property": "attachment",
                    "name": "18",
                    "new_value": "CMakeLists.txt"
                },
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "1",
                    "new_value": "2"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "0",
                    "new_value": "30"
                }
            ]
        },
        {
            "id": 133,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "-I am fed up with this. I'll buy a beer (*10$ over PayPal*) to the guy who makes the client compile using CMake without SIGSEGV.-\n\nWe have a winner! The guy getting a beer will be... myself :D The problem was not my CMake script, it was CMake itself. Seems like it isn't much more clever build system than premake after all. ",
            "created_on": "2012-06-03T11:02:36Z",
            "details": []
        },
        {
            "id": 134,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "I figured out that @CMAKE_SHARED_LIBRARY_LINK_C_FLAGS@ must be set to \"\", otherwise CMake will automatically pass *-rdynamic* to the linker which causes the client crash.",
            "created_on": "2012-06-04T11:47:02Z",
            "details": [
                {
                    "property": "attr",
                    "name": "assigned_to_id",
                    "new_value": "1"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "30",
                    "new_value": "50"
                }
            ]
        },
        {
            "id": 135,
            "user": {
                "id": 15,
                "name": "muessli"
            },
            "notes": "Radegast wrote:\r\n> -I am fed up with this. I'll buy a beer (*10$ over PayPal*) to the guy who makes the client compile using CMake without SIGSEGV.-\r\n> \r\n> We have a winner! The guy getting a beer will be... myself :D The problem was not my CMake script, it was CMake itself. Seems like it isn't much more clever build system than premake after all.\r\n\r\nHi Radegast, maybe SCons is an Alternative??? mfg muesli\r\n\r\n",
            "created_on": "2012-06-04T14:15:54Z",
            "details": []
        },
        {
            "id": 136,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "muessli wrote:\r\n> Hi Radegast, maybe SCons is an Alternative??? mfg muesli\r\nWell, I figured out where the problem with CMake was, so now we just need to add Windows support into it. I said that CMake is not much more clever than premake as a joke, because I know user:morsik hates premake. AFAIK, SCons doesn't generate Visual Studio project files and one of the main reasons for moving to CMake was that premake generated unusable VS files. On the other hand I know Enemy Territory community is more familiar with SCons than anything else, so it is a good point.",
            "created_on": "2012-06-04T15:17:47Z",
            "details": []
        },
        {
            "id": 137,
            "user": {
                "id": 15,
                "name": "muessli"
            },
            "notes": "Radegast wrote:\r\n> muessli wrote:\r\n> > Hi Radegast, maybe SCons is an Alternative??? mfg muesli\r\n> Well, I figured out where the problem with CMake was, so now we just need to add Windows support into it. I said that CMake is not much more clever than premake as a joke, because I know user:morsik hates premake. AFAIK, SCons doesn't generate Visual Studio project files and one of the main reasons for moving to CMake was that premake generated unusable VS files. On the other hand I know Enemy Territory community is more familiar with SCons than anything else, so it is a good point.\r\n\r\nAnyway, you are the Expert! \r\nIm waiting for a nightly Build of an NSIS-WindowsInstaller with public *.nsi File!\r\nmfg muessli\r\n",
            "created_on": "2012-06-04T19:00:42Z",
            "details": []
        },
        {
            "id": 138,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "Initial version of CMake build script is now in the repo.\n\n{TODO}\n* (\\) Windows build\n* (\\) optional features (e.g. OpenAL and Freetype)\n* NSIS installer\n** see Task #39\n* -fetch & build bundled libraries from etlegacy-libs repo- \n** Too complicated. Will have to wait for somebody else.",
            "created_on": "2012-06-06T19:22:42Z",
            "details": [
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "50",
                    "new_value": "60"
                }
            ]
        },
        {
            "id": 146,
            "user": {
                "id": 33,
                "name": "dutchmeat"
            },
            "notes": "After setting 'BUNDLED_LIBS' to ON(CMakeLists.txt) and adding the CURL_STATICLIB definition to the client build options the project compiled just fine.\nSee the patch file for the definition and see http://curl.haxx.se/docs/faq.html#Link_errors_when_building_libcur for more information.\n\nOn a side note; \n\tif you want to debug with Visual Studio and you can't because the JPEG makefile is failing because of the 'ren jconfig.vc jconfig.h' failure(file was already renamed), just           change the libs/jpeg/makefile.vc file so it checks on existance like so;\n<pre>\n\t\tif exist jconfig.vc ren jconfig.vc jconfig.h\n\t\tif exist makejsln.v10 ren makejsln.v10 jpeg.sln\n\t\tif exist makeasln.v10 ren makeasln.v10 apps.sln\n\t\t... etc ...\n</pre>",
            "created_on": "2012-06-21T15:50:05Z",
            "details": [
                {
                    "property": "attachment",
                    "name": "20",
                    "new_value": "win_cmake_build.patch"
                }
            ]
        },
        {
            "id": 294,
            "user": {
                "id": 35,
                "name": "Dragonji"
            },
            "notes": "May I ask if you're planning to fix OpenAL support?\n\nSometimes I feel like SDL omits or delays some sounds.",
            "created_on": "2012-08-30T14:07:26Z",
            "details": []
        },
        {
            "id": 295,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "Dragon wrote:\r\n> May I ask if you're planning to fix OpenAL support?\r\n> \r\n> Sometimes I feel like SDL omits or delays some sounds.\r\n\r\nI think right now we are waiting for someone who knows how to use OpenAL to come and fix it for us.",
            "created_on": "2012-09-02T09:37:01Z",
            "details": []
        },
        {
            "id": 300,
            "user": {
                "id": 1,
                "name": "Radegast"
            },
            "notes": "",
            "created_on": "2012-09-04T18:39:15Z",
            "details": [
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "2",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "60",
                    "new_value": "100"
                }
            ]
        }
    ],
    "watchers": [
        {
            "id": 1,
            "name": "Radegast"
        }
    ],
    "time_entries": null,
    "id": 58,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 2,
        "name": "Feature"
    },
    "status": {
        "id": 5,
        "name": "Fixed"
    },
    "priority": {
        "id": 4,
        "name": "Normal"
    },
    "author": {
        "id": 1,
        "name": "Radegast"
    },
    "assigned_to": {
        "id": 1,
        "name": "Radegast"
    },
    "category": {
        "id": 12,
        "name": "General"
    },
    "fixed_version": {
        "id": 1,
        "name": "2.70rc1"
    },
    "subject": "CMake build system",
    "description": "Premake's shortcomings are becoming more visible as ET:L grows. CMake is more powerful and will hopefully generate correct Visual Studio project files.",
    "start_date": "2012-05-30",
    "done_ratio": 100,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS"
        },
        {
            "id": 2,
            "name": "Arch"
        }
    ],
    "created_on": "2012-05-30T13:44:53Z",
    "updated_on": "2012-09-04T18:39:15Z",
    "closed_on": "2012-09-04T18:39:15Z"
}