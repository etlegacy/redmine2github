{
    "children": null,
    "attachments": null,
    "relations": [
        {
            "id": 299,
            "issue_id": 932,
            "issue_to_id": 975,
            "relation_type": "relates",
            "delay": null
        }
    ],
    "changesets": [
        {
            "revision": "1c0e3ac78752bf3f3a340ae8c3298ec2c28a68ce",
            "user": {
                "id": 392,
                "name": "Timothy"
            },
            "comments": "Removed obsolete shrubbot checks (refs #932)",
            "committed_on": "2017-03-16T17:30:30Z"
        }
    ],
    "journals": [
        {
            "id": 6223,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "",
            "created_on": "2017-01-15T12:39:49Z",
            "details": [
                {
                    "property": "relation",
                    "name": "relates",
                    "new_value": "975"
                }
            ]
        },
        {
            "id": 6225,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "Some server comands should be moved  to Lua ('gib' etc)",
            "created_on": "2017-01-15T12:41:25Z",
            "details": []
        },
        {
            "id": 6257,
            "user": {
                "id": 392,
                "name": "Timothy"
            },
            "notes": "Is it also possible to remove some output in existing lua functions? For example et.MutePlayer also gives feedback to the player that's being muted, which in my opinion doesn't fit in a lua interface, as it should only do what's requested and then let lua handle any output. This also solves the issue of formatting, because at the moment I'm unable to style the output.",
            "created_on": "2017-01-23T10:42:31Z",
            "details": []
        },
        {
            "id": 6258,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "Vanilla includes Mute, Unmute, Warn, Kick and Ban. That's the strict minimum for administration.\r\n\r\nWe should keep these, but move all others commands that have been added to Lua. That includes gib, die, freeze, unfreeze, burn, pip, throw.\r\nRevivePlayer (from vanilla) should probably be moved to Lua too (?).",
            "created_on": "2017-01-23T11:37:11Z",
            "details": []
        },
        {
            "id": 6259,
            "user": {
                "id": 35,
                "name": "Dragonji"
            },
            "notes": "This is a good idea Spyhawk.",
            "created_on": "2017-01-23T15:46:53Z",
            "details": []
        },
        {
            "id": 6265,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "When we ship WolfAdmin with installs there is no need for keeping such half implemented commands in qagame. \r\nWe need db persistence for bans and mutes anyway and this is given on engine or Lua side. Timo did implement a ban system with ip/ip range bans.\r\nFinally most later/active mods support Lua, WolfAdmin isn't legacy only and the engine can grab sqlite3 data. Let us simply define game manangement is a Lua task.\r\n\r\n\r\n",
            "created_on": "2017-01-23T22:23:48Z",
            "details": []
        },
        {
            "id": 6317,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "From Timo:\r\n\r\nbq. !gib is implemented\r\n!die what's that for?\r\n!freeze, !unfreeze cannot since I cannot modify ps.origin\r\n!throw, !fling and !launch for the same reason cannot be implemented in Lua only\r\n!burn, !pip and !pop also need mod-related edits\r\n\r\nSee http://dev.timosmit.com/bugtracker/view.php?id=62.\r\n\r\n-TODO: ship relevant pk3 files (such as pm.wav) directly with legacy mod.- done",
            "created_on": "2017-02-04T12:57:27Z",
            "details": []
        },
        {
            "id": 6563,
            "user": {
                "id": 392,
                "name": "Timothy"
            },
            "notes": "I took the liberty of removing some obsolete shrubbot calls (see commit:1c0e3ac78752bf3f3a340ae8c3298ec2c28a68ce). I think it is a good idea to decide on the approach we would like to take given the fact that WolfAdmin is able to run standalone and has taken over quite a lot of functionality already. Ideally I would port more of the existing game management functionalities to WolfAdmin, but I would like to leave this up to you. After all, WolfAdmin has to prove itself as a reasonable alternative for what would previously be provided by shrubbot.\r\n\r\n---\r\n\r\nAt this moment, I am thinking of several routes that we could take. The solutions described in option 1 are a subset of 2, 2 of 3 and so on.\r\n\r\nh2. Option 1: bare minimum\r\n\r\nBy this I intend to get rid of everything related to game management and keep the bare minimum. This excludes any features related to warns, mutes and bans from the mod code, as well as removing the inactivity checks and possibly even forced team balance. After removing this, the game and mod will only provide some mere hooks/lua functions if needed:\r\n* voting hooks (no voting limit, players immune to certain votes);\r\n* chat hooks (team chat spying);\r\n* entity/world modifying functions (e.g. et.setPlayerVelocity for !throw, !launch)\r\n\r\nh2. Option 2: minimum + vanilla features\r\n\r\nThis option is roughly the same as above, however, in this case inactivity checking and balanced teams can be provided by the mod code to give at least some admin features by default. However, extra hooks may be needed:\r\n\r\n* activity hooks (no inactivity putspec or kick);\r\n* team hooks (ignore team balance);\r\n\r\nh2. Option 3: basic admin in mod\r\n\r\nAs the name suggests, also provide minimal admin features, e.g. warn, mute, kick as implemented by vote and/or referee commands. This is kind of the same situation as it is now, which is not ideal for rookie admins as WolfAdmin might provide alternatives and confuse them.\r\n\r\n---\r\n\r\nOf course, if any of these options is used, we have to decide on how to implement these hooks/features. Currently et.MutePlayer only sets sess.muted (which can also be set using et.gentity_set) and prints some feedback to the involved player(s), which I find a little cumbersome; a Lua function should only do what is necessary, and leave any output to the calling Lua script. I would also like to hear your opinion on this aspect.\r\n\r\nAll in all, from my perspective option 1 is the ideal situation: no confusion can arise of duplicate features and a minimum of hooks for a Lua interface is needed. This would entirely separate the player/game management from the mod (except for referees/voting?). I would understand that you find this a rather extreme approach, so any combination of the above is also fine with me. I would just like to know the desired route so I can take this into account for the next iterations of WolfAdmin.",
            "created_on": "2017-03-16T18:29:51Z",
            "details": []
        },
        {
            "id": 6788,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "",
            "created_on": "2017-06-29T18:20:13Z",
            "details": [
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "19",
                    "new_value": "8"
                }
            ]
        },
        {
            "id": 7521,
            "user": {
                "id": 3,
                "name": "IR4T4"
            },
            "notes": "",
            "created_on": "2019-01-06T08:29:45Z",
            "details": [
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "8",
                    "new_value": "22"
                }
            ]
        },
        {
            "id": 7782,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2019-02-14T10:41:52Z",
            "details": [
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "22",
                    "new_value": "8"
                }
            ]
        }
    ],
    "watchers": [
        {
            "id": 392,
            "name": "Timothy"
        }
    ],
    "time_entries": null,
    "id": 932,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 2,
        "name": "Feature"
    },
    "status": {
        "id": 1,
        "name": "New"
    },
    "priority": {
        "id": 4,
        "name": "Normal"
    },
    "author": {
        "id": 140,
        "name": "Spyhawk"
    },
    "category": {
        "id": 21,
        "name": "Mod generic"
    },
    "fixed_version": {
        "id": 8,
        "name": "2.78"
    },
    "subject": "Tighter interface with Lua admin suite",
    "description": "Some low level code might require a tighter interface with the Lua admin code.\r\nFor example, admins shouldn't be kicked by ClientInactivityTimer().\r\n\r\nCheck the code and add a Lua hook if required.\r\nSee G_shrubbot_permission calls in etpub mod code.",
    "start_date": "2016-09-02",
    "done_ratio": 0,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS",
            "value": ""
        },
        {
            "id": 2,
            "name": "Arch",
            "value": ""
        }
    ],
    "created_on": "2016-09-02T10:03:35Z",
    "updated_on": "2019-02-14T10:41:52Z"
}