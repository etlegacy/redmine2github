{
    "children": null,
    "attachments": null,
    "relations": null,
    "changesets": [
        {
            "revision": "b044c81cc23a308c070466e88482a2723b889432",
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "comments": "disabled nagles algorithm for tcp sockets, fixes #463",
            "committed_on": "2014-10-09T11:57:44Z"
        }
    ],
    "journals": [
        {
            "id": 2706,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2014-01-02T12:23:46Z",
            "details": [
                {
                    "property": "attr",
                    "name": "subject",
                    "old_value": "Disabling Nagle\u2019s algorithm",
                    "new_value": "DisableNagle\u2019s algorithm"
                },
                {
                    "property": "attr",
                    "name": "description",
                    "old_value": "[Nagle's algorithm](http://en.wikipedia.org/wiki/Nagle's_algorithm) is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. In a nutshell, it optimize the bandwidth by slowing down the packet transmission.\r\n\r\nA not-so well known network tweak is to disable this algorithm, allowing real time data transmission and thus lower gaming latency/ping. It's only possible to disable it system wide on windows, but we should do that directly in the network code for *nix and windows without disabling the algo system wide.\r\n\r\nIt has been reported on IRC that this tweak has a positive effect (Windows, with algo system wide disabled)\r\n\r\nFor example of implementation, see: \r\n* http://stackoverflow.com/questions/17842406/how-would-one-disable-nagles-algorithm-in-linux\r\n* http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476%28v=vs.85%29.aspx\r\n* http://www.unixguide.net/network/socketfaq/2.16.shtml",
                    "new_value": "Nagle's algorithm is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. In a nutshell, it optimize the bandwidth by slowing down the packet transmission.\r\n\r\nFrom Wikipedia: http://en.wikipedia.org/wiki/Nagle's_algorithm\r\n\r\n   Applications that expect real time responses can react poorly with Nagle's algorithm. Applications such as networked multiplayer video games expect that actions in the game are sent immediately, while the algorithm purposefully delays transmission, increasing bandwidth efficiency at the expense of latency. For this reason applications with low-bandwidth time-sensitive transmissions typically use TCP_NODELAY to bypass the Nagle delay.\r\n\r\nIt has been reported on IRC that this tweak has a positive effect (Windows, with the algo system wide disabled) when playing ET. Disabling it in the current network code would allow real time data transmission and thus lower gaming latency/ping for all clients.\r\n\r\nNote: It's possible to disable it system wide on windows, but for *nix (and windows without disabling the algo system wide) we should do that directly in ip_net.c\r\n\r\n\r\n\r\n\r\nFor example of implementation, see: \r\n* http://stackoverflow.com/questions/17842406/how-would-one-disable-nagles-algorithm-in-linux\r\n* http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476%28v=vs.85%29.aspx\r\n* http://www.unixguide.net/network/socketfaq/2.16.shtml"
                }
            ]
        },
        {
            "id": 2707,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2014-01-02T12:24:22Z",
            "details": [
                {
                    "property": "attr",
                    "name": "description",
                    "old_value": "Nagle's algorithm is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. In a nutshell, it optimize the bandwidth by slowing down the packet transmission.\r\n\r\nFrom Wikipedia: http://en.wikipedia.org/wiki/Nagle's_algorithm\r\n\r\n   Applications that expect real time responses can react poorly with Nagle's algorithm. Applications such as networked multiplayer video games expect that actions in the game are sent immediately, while the algorithm purposefully delays transmission, increasing bandwidth efficiency at the expense of latency. For this reason applications with low-bandwidth time-sensitive transmissions typically use TCP_NODELAY to bypass the Nagle delay.\r\n\r\nIt has been reported on IRC that this tweak has a positive effect (Windows, with the algo system wide disabled) when playing ET. Disabling it in the current network code would allow real time data transmission and thus lower gaming latency/ping for all clients.\r\n\r\nNote: It's possible to disable it system wide on windows, but for *nix (and windows without disabling the algo system wide) we should do that directly in ip_net.c\r\n\r\n\r\n\r\n\r\nFor example of implementation, see: \r\n* http://stackoverflow.com/questions/17842406/how-would-one-disable-nagles-algorithm-in-linux\r\n* http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476%28v=vs.85%29.aspx\r\n* http://www.unixguide.net/network/socketfaq/2.16.shtml",
                    "new_value": "Nagle's algorithm is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. In a nutshell, it optimize the bandwidth by slowing down the packet transmission.\r\n\r\nFrom Wikipedia: http://en.wikipedia.org/wiki/Nagle's_algorithm\r\n\r\n_Applications that expect real time responses can react poorly with Nagle's algorithm. Applications such as networked multiplayer video games expect that actions in the game are sent immediately, while the algorithm purposefully delays transmission, increasing bandwidth efficiency at the expense of latency. For this reason applications with low-bandwidth time-sensitive transmissions typically use TCP_NODELAY to bypass the Nagle delay._\r\n\r\nIt has been reported on IRC that this tweak has a positive effect (Windows, with the algo system wide disabled) when playing ET. Disabling it in the current network code would allow real time data transmission and thus lower gaming latency/ping for all clients.\r\n\r\nNote: It's possible to disable it system wide on windows, but for *nix (and windows without disabling the algo system wide) we should do that directly in ip_net.c\r\n\r\n\r\n\r\n\r\nFor example of implementation, see: \r\n* http://stackoverflow.com/questions/17842406/how-would-one-disable-nagles-algorithm-in-linux\r\n* http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476%28v=vs.85%29.aspx\r\n* http://www.unixguide.net/network/socketfaq/2.16.shtml"
                }
            ]
        },
        {
            "id": 2783,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "",
            "created_on": "2014-01-07T20:14:30Z",
            "details": [
                {
                    "property": "attr",
                    "name": "subject",
                    "old_value": "DisableNagle\u2019s algorithm",
                    "new_value": "Disable Nagle\u2019s algorithm"
                },
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "11",
                    "new_value": "8"
                }
            ]
        },
        {
            "id": 3529,
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "notes": "Why wasn't this just implemented on the Net_opensocks since that is the only place where tcp sockets are created on the engine? Or was there a reason it was not added? Since i can drop in the code if its ok..",
            "created_on": "2014-10-09T11:14:27Z",
            "details": []
        },
        {
            "id": 3530,
            "user": {
                "id": 140,
                "name": "Spyhawk"
            },
            "notes": "Jacker wrote:\r\n> Or was there a reason it was not added? Since i can drop in the code if its ok..\r\n\r\nI did some research when I added this feature in the tracker, but never figured out why this wasn't implemented in the first place. I guess Id/SplashDamage simply never cared about it.",
            "created_on": "2014-10-09T11:43:57Z",
            "details": []
        },
        {
            "id": 3531,
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "notes": "Most likely when the engine code for the net handling was written, it just was not in their radar. Since most of the game commucation uses UDP and TCP sockets are only used for few certain things the effect really was significant enough for someone to take a look.\r\n\r\nBut i will just drop in the code and close this.",
            "created_on": "2014-10-09T11:58:33Z",
            "details": []
        },
        {
            "id": 3534,
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "notes": "Applied in changeset commit:b044c81cc23a308c070466e88482a2723b889432.",
            "created_on": "2014-10-09T12:11:33Z",
            "details": [
                {
                    "property": "attr",
                    "name": "status_id",
                    "old_value": "1",
                    "new_value": "5"
                },
                {
                    "property": "attr",
                    "name": "done_ratio",
                    "old_value": "0",
                    "new_value": "100"
                }
            ]
        },
        {
            "id": 3535,
            "user": {
                "id": 44,
                "name": "Jacker"
            },
            "notes": "",
            "created_on": "2014-10-09T12:13:44Z",
            "details": [
                {
                    "property": "attr",
                    "name": "fixed_version_id",
                    "old_value": "8",
                    "new_value": "6"
                }
            ]
        }
    ],
    "watchers": [],
    "time_entries": null,
    "id": 463,
    "project": {
        "id": 1,
        "name": "ET: Legacy Development"
    },
    "tracker": {
        "id": 2,
        "name": "Feature"
    },
    "status": {
        "id": 5,
        "name": "Fixed"
    },
    "priority": {
        "id": 4,
        "name": "Normal"
    },
    "author": {
        "id": 140,
        "name": "Spyhawk"
    },
    "category": {
        "id": 1,
        "name": "Client"
    },
    "fixed_version": {
        "id": 6,
        "name": "2.71"
    },
    "subject": "Disable Nagle\u2019s algorithm",
    "description": "Nagle's algorithm is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. In a nutshell, it optimize the bandwidth by slowing down the packet transmission.\r\n\r\nFrom Wikipedia: http://en.wikipedia.org/wiki/Nagle's_algorithm\r\n\r\n_Applications that expect real time responses can react poorly with Nagle's algorithm. Applications such as networked multiplayer video games expect that actions in the game are sent immediately, while the algorithm purposefully delays transmission, increasing bandwidth efficiency at the expense of latency. For this reason applications with low-bandwidth time-sensitive transmissions typically use TCP_NODELAY to bypass the Nagle delay._\r\n\r\nIt has been reported on IRC that this tweak has a positive effect (Windows, with the algo system wide disabled) when playing ET. Disabling it in the current network code would allow real time data transmission and thus lower gaming latency/ping for all clients.\r\n\r\nNote: It's possible to disable it system wide on windows, but for *nix (and windows without disabling the algo system wide) we should do that directly in ip_net.c\r\n\r\n\r\n\r\n\r\nFor example of implementation, see: \r\n* http://stackoverflow.com/questions/17842406/how-would-one-disable-nagles-algorithm-in-linux\r\n* http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476%28v=vs.85%29.aspx\r\n* http://www.unixguide.net/network/socketfaq/2.16.shtml",
    "start_date": "2014-01-02",
    "done_ratio": 100,
    "custom_fields": [
        {
            "id": 1,
            "name": "OS",
            "value": ""
        },
        {
            "id": 2,
            "name": "Arch",
            "value": ""
        }
    ],
    "created_on": "2014-01-02T12:11:53Z",
    "updated_on": "2014-10-09T12:13:44Z",
    "closed_on": "2014-10-09T12:11:33Z"
}